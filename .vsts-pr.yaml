jobs:
- job: Linux
  pool:
    vmImage: ubuntu-16.04
  timeoutInMinutes: 90
  strategy:
    maxParallel: 2
    matrix:
      dotnet_sdk:
        _command: make
        _args: Configuration=release
      # disabled until it can be properly fixed
      release_fcs:
        _command: ./fcs/build.sh
        _args: Build
  steps:
  - script: $(_command) $(_args)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/artifacts/TestResults'
      ArtifactName: 'Linux $(_command) $(_args)'
      publishLocation: Container
    continueOnError: true
    condition: failed()

- job: Windows
  pool:
    vmImage: vs2017-win2016
  timeoutInMinutes: 120
  strategy:
    maxParallel: 5
    matrix:
      # new
      desktop_release:
        _configuration: Release
        _testKind: testDesktop
      coreclr_release:
        _configuration: Release
        _testKind: testCoreclr
      fsharpqa_release:
        _configuration: Release
        _testKind: testFSharpQA
      vs_release:
        _configuration: Release
        _testKind: testVs
      fcs_release:
        _configuration: Release
        _testKind: testFcs
  steps:
  - script: eng\CIBuild.cmd -configuration $(_configuration) -$(_testKind)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\artifacts\TestResults'
      ArtifactName: 'Windows $(_configuration) $(_testKind)'
      publishLocation: Container
    continueOnError: true
    condition: failed()
